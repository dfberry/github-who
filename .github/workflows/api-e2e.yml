# This is a basic workflow to help you get started with Actions
name: API E2E Deploy 
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  AZURE_FUNCTIONAPP_NAME: github-who-api-e2e
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './api'  # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '14.x'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v2   
    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Set environment variables
      run: |
        echo "GIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV  
    - name: Print environment variables
      run: |
        echo "GITHUB_REPOSITORY_SLUG=$GITHUB_REPOSITORY_SLUG"
        echo "GITHUB_REPOSITORY_OWNER=$GITHUB_REPOSITORY_OWNER"
        echo "GITHUB_REPOSITORY_OWNER_SLUG=$GITHUB_REPOSITORY_OWNER_SLUG"
        echo "GITHUB_REPOSITORY_NAME=$GITHUB_REPOSITORY_NAME"
        echo "GITHUB_REPOSITORY_NAME_SLUG=$GITHUB_REPOSITORY_NAME_SLUG"
        echo "GITHUB_REF_SLUG=$GITHUB_REF_SLUG"
        echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
        echo "GITHUB_REF_NAME_SLUG=$GITHUB_REF_NAME_SLUG"
        echo "GITHUB_SHA_SHORT=$GITHUB_SHA_SHORT" 
        echo "GITHUB_BRANCH=${GITHUB_HEAD_REF-${GITHUB_REF##*/}}"
        echo "AZURE_FUNCTIONAPP_PACKAGE_PATH=${AZURE_FUNCTIONAPP_PACKAGE_PATH}" 
        echo "AZURE_FUNCTIONAPP_NAME=${AZURE_FUNCTIONAPP_NAME}" 
    - name: 'Npm install build test'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd
    - name: 'Deploy Function'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_E2E }}
